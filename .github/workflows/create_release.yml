name: Bump Version, Create Release, and Upload Artifacts

on:
  pull_request:
    types: [closed]
    branches: [master, main]

permissions:
  contents: write
  checks: write
  actions: read
  issues: read
  packages: write
  pull-requests: read
  repository-projects: read
  statuses: read

jobs:
  bump_version_and_create_release:
    name: Bump version and create release
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.test_tag_version.outputs.new_tag }}
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'bump') }}
    steps:
      - uses: actions/checkout@v5

      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.8'

      - name: Determine Default bump type
        id: determine_default_bump
        run: |
          labels=$(cat <<EOF
          ${{ toJson(github.event.pull_request.labels) }}
          EOF
          )
          labels=$(echo "$labels" | jq -r '.[].name')
          if echo "$labels" | grep -q "major"; then
            echo "label_bump=major" >> $GITHUB_ENV
          elif echo "$labels" | grep -q "minor"; then
            echo "label_bump=minor" >> $GITHUB_ENV
          else
            echo "label_bump=patch" >> $GITHUB_ENV
          fi

      - name: Calculate bumped version
        id: test_tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ env.label_bump }}
          dry_run: true

      - name: Run version bump script
        run: |
          python3 Scripts/increment_version.py ${{ steps.test_tag_version.outputs.new_tag }}

      - name: Set up Git and Push changes
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: bump the Flakkari version to ${{ steps.test_tag_version.outputs.new_tag }}" || true
          git push || true

      - name: Create Tag
        id: tag_version
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ steps.test_tag_version.outputs.new_tag }}
          git push origin ${{ steps.test_tag_version.outputs.new_tag }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1.20.0
        with:
          tag: ${{ steps.test_tag_version.outputs.new_tag }}
          name: Flakkari ${{ steps.test_tag_version.outputs.new_tag }}
          body: ${{ steps.test_tag_version.outputs.changelog }}
          generateReleaseNotes: true

  build_and_upload_artifacts:
    name: Build and Upload Artifacts
    needs: bump_version_and_create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          actions-cache-folder: '.xmake-cache'
          actions-cache-key: '${{ runner.os }}-xmake-install'
          package-cache: true
          package-cache-key: '${{ runner.os }}-xmake-nlohmann_json-libcurl-libgit2'
          project-path: '.'

      - name: Build Flakkari Package with xpack
        run: |
          xmake f -y -m release
          xmake pack -y

      - name: Upload assets via softprops/action-gh-release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./build/xpack/flakkari/*
          tag_name: ${{ needs.bump_version_and_create_release.outputs.new_tag }}
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
